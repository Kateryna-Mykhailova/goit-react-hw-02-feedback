{"version":3,"sources":["components/Feedback/Statistics.module.css","components/Feedback/FeedbackOptions.module.css","components/Feedback/Section.module.css","components/Feedback/Notification.module.css","components/Feedback/Section.js","components/Feedback/FeedbackOptions.js","components/Feedback/Statistics.js","components/Feedback/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","Feedback_title","FeedbackOptions","onIncrementBad","feedback_btn_container","feedback_btn","name","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","statistic_title","statistic_list","statistic_item","Notification","message","notification","App","state","handleIncrement","e","console","log","target","setState","prevState","countTotalFeedback","Object","values","reduce","acc","item","countPositiveFeedbackPercentage","Math","round","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,gBAAkB,oCAAoC,eAAiB,mCAAmC,eAAiB,qC,gBCA7ID,EAAOC,QAAU,CAAC,aAAe,sCAAsC,uBAAyB,kD,qBCAhGD,EAAOC,QAAU,CAAC,eAAiB,kC,gBCAnCD,EAAOC,QAAU,CAAC,aAAe,qC,+LCalBC,EAVC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,gCACE,sBAAMC,UAAWC,IAAOC,eAAxB,SAAyCJ,IACxCC,M,gBCyBUI,EA7BS,SAAC,GAAD,IAAGC,EAAH,EAAGA,eAAH,OACtB,sBAAKJ,UAAWC,IAAOI,uBAAvB,UACE,wBACEL,UAAWC,IAAOK,aAClBC,KAAK,OACLC,KAAK,SACLC,QAASL,EAJX,kBAQA,wBACEJ,UAAWC,IAAOK,aAClBC,KAAK,UACLC,KAAK,SACLC,QAASL,EAJX,qBAQA,wBACEJ,UAAWC,IAAOK,aAClBC,KAAK,MACLC,KAAK,SACLC,QAASL,EAJX,qB,gBCaWM,EA9BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,gCACE,sBAAMf,UAAWC,IAAOe,gBAAxB,uBACA,qBAAIhB,UAAWC,IAAOgB,eAAtB,UACE,qBAAIjB,UAAWC,IAAOiB,eAAtB,mBACQ,+BAAOP,OAEf,qBAAIX,UAAWC,IAAOiB,eAAtB,sBACW,+BAAON,OAElB,qBAAIZ,UAAWC,IAAOiB,eAAtB,kBACO,+BAAOL,OAEd,qBAAIb,UAAWC,IAAOiB,eAAtB,oBACS,+BAAOJ,OAEhB,qBAAId,UAAWC,IAAOiB,eAAtB,gCACqB,iCAAOH,EAAP,iB,iBCVZI,EAPM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,sBAAMpB,UAAWC,IAAOoB,aAAxB,SAAuCD,KCCnCE,E,4MACJC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPW,gBAAkB,SAAAC,GAChBC,QAAQC,IAAIF,EAAEG,OAAOrB,MACrB,EAAKsB,UAAS,SAAAC,GAAS,sBACpBL,EAAEG,OAAOrB,KAAOuB,EAAUL,EAAEG,OAAOrB,MAAQ,O,EAQhDwB,mBAAqB,WAEnB,OAAOC,OAAOC,OAAO,EAAKV,OAAOW,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,I,EAMxEC,gCAAkC,WAEhC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKhB,MAAMZ,KAAc,EAAKoB,uB,4CAKnD,WACE,OACE,qBAAK/B,UAAU,qBAAf,SACE,eAAC,EAAD,CAASF,MAAM,wBAAf,UACE,cAAC,EAAD,CAAiBM,eAAgBoC,KAAKhB,kBACrCgB,KAAKT,qBACJ,cAAC,EAAD,CACEpB,KAAM6B,KAAKjB,MAAMZ,KACjBC,QAAS4B,KAAKjB,MAAMX,QACpBC,IAAK2B,KAAKjB,MAAMV,IAChBC,MAAO0B,KAAKT,qBACZhB,mBAAoByB,KAAKH,oCAG3B,cAAC,EAAD,CAAcjB,QAAQ,+B,GA/ChBqB,IAAMC,WA6ETpB,IC7EfqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7ea0bad7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic_title\":\"Statistics_statistic_title__2rKGK\",\"statistic_list\":\"Statistics_statistic_list__3rJx8\",\"statistic_item\":\"Statistics_statistic_item__W8gTi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback_btn\":\"FeedbackOptions_feedback_btn__2CfYz\",\"feedback_btn_container\":\"FeedbackOptions_feedback_btn_container__3-pq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Feedback_title\":\"Section_Feedback_title__2voKU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1iOa-\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <div>\n    <span className={styles.Feedback_title}>{title}</span>\n    {children}\n  </div>\n);\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\nexport default Section;\n","import React from 'react';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ onIncrementBad }) => (\n  <div className={styles.feedback_btn_container}>\n    <button\n      className={styles.feedback_btn}\n      name=\"good\"\n      type=\"button\"\n      onClick={onIncrementBad}\n    >\n      Good\n    </button>\n    <button\n      className={styles.feedback_btn}\n      name=\"neutral\"\n      type=\"button\"\n      onClick={onIncrementBad}\n    >\n      Neutral\n    </button>\n    <button\n      className={styles.feedback_btn}\n      name=\"bad\"\n      type=\"button\"\n      onClick={onIncrementBad}\n    >\n      Bad\n    </button>\n  </div>\n);\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div>\n    <span className={styles.statistic_title}>Statistic</span>\n    <ul className={styles.statistic_list}>\n      <li className={styles.statistic_item}>\n        Good: <span>{good}</span>\n      </li>\n      <li className={styles.statistic_item}>\n        Neutral: <span>{neutral}</span>\n      </li>\n      <li className={styles.statistic_item}>\n        Bad: <span>{bad}</span>\n      </li>\n      <li className={styles.statistic_item}>\n        Total: <span>{total}</span>\n      </li>\n      <li className={styles.statistic_item}>\n        Positive feedback: <span>{positivePercentage}%</span>\n      </li>\n    </ul>\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nconst Notification = ({ message }) => (\n  <span className={styles.notification}>{message}</span>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import React from 'react';\nimport './App.css';\nimport Section from '../src/components/Feedback/Section';\nimport FeedbackOptions from '../src/components/Feedback/FeedbackOptions';\nimport Statistics from '../src/components/Feedback/Statistics';\nimport Notification from './components/Feedback/Notification';\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = e => {\n    console.log(e.target.name);\n    this.setState(prevState => ({\n      [e.target.name]: prevState[e.target.name] + 1,\n    }));\n\n    // this.setState(prevState => ({\n    //   bad: prevState.bad + 1,\n    // }));\n  };\n\n  countTotalFeedback = () => {\n    // return this.state.bad + this.state.neutral + this.state.good;\n    return Object.values(this.state).reduce((acc, item) => (acc += item), 0);\n    // this.setState(prevState => (\n    //     prevState.bad + 1\n    //  ))\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    // console.log(Object.values(this.state));\n    return Math.round((this.state.good * 100) / this.countTotalFeedback());\n  };\n  //     ;\n  // countPositiveFeedbackPercentage();\n\n  render() {\n    return (\n      <div className=\"Feedback_container\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onIncrementBad={this.handleIncrement} />\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n\n          {/* <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          /> */}\n        </Section>\n\n        {/* <FeedbackOptions onIncrementBad={this.handleIncrementBad} /> */}\n        {/* <Statistics  /> */}\n        {/* <span className=\"Feedback_title\">Please leave feedback</span> */}\n        {/* <div >\n                  <button type=\"button\" className=\"Feedback_btn\">Good</button>\n                  <button type=\"button\" className=\"Feedback_btn\">Neutral</button>\n                  <button type=\"button\" onClick={this.handleIncrementBad} className=\"Feedback_btn\">Bad</button>\n              </div> */}\n        {/* <span className=\"Feedback_title\">Statistic</span>\n              <ul className=\"Statistic_list\">\n                  <li>Good: <span>{this.state.good}</span></li>\n                  <li>Neutral: <span>{this.state.neutral}</span></li>\n                  <li>Bad: <span>{this.state.bad}</span></li>\n              </ul> */}\n      </div>\n    );\n  }\n}\nexport default App;\n\n// import React from 'react';\n// import './App.css';\n\n// import Feedback from './components/Feedback/Feedback';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <Feedback />\n\n//     </div>\n//   );\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}